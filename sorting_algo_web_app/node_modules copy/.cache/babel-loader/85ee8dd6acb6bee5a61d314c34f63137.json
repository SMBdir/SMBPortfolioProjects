{"ast":null,"code":"var _jsxFileName = \"/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Button from './Button';\nimport App from '../App';\nimport { UpdateBarChart } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrayToSort;\nvar labels;\n\nconst Barchart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'A randomly generated number entry',\n          data: [],\n          backgroundColor: 'purple'\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        skipLabels: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Barchart;\n\nconst ReturnArrayToSort = () => {\n  return arrayToSort;\n};\n\n_c2 = ReturnArrayToSort;\nexport default Barchart;\nvar BSbutton = document.createElement(\"BSbutton\");\nBSbutton.innerHTML = \"BubbleSort\"; // 2. Append somewhere\n\nvar body = document.getElementsByTagName(\"body\")[0];\nbody.appendChild(BSbutton); // 3. Add event handler\n\nBSbutton.addEventListener(\"click\", function () {\n  alert(\"Running Bubble Sort\");\n  BubbleSort(arrayToSort);\n});\n\nfunction BubbleSort(arrayToSort) {\n  //var length = arrayToSort.length;\n  var swappedOnCurrentIter = false;\n  var placeholder;\n  var firstit = false;\n\n  for (let i = 1; i < 500; i++) {\n    if (arrayToSort[i - 1] > arrayToSort[i]) {\n      placeholder = arrayToSort[i - 1];\n      arrayToSort[i - 1] = arrayToSort[i];\n      arrayToSort[i] = placeholder;\n      swappedOnCurrentIter = true;\n    }\n  }\n\n  if (swappedOnCurrentIter == true) {\n    UpdateBarChart(arrayToSort);\n    BubbleSort(arrayToSort);\n  } else {\n    return arrayToSort;\n  }\n}\n\n_c3 = BubbleSort;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Barchart\");\n$RefreshReg$(_c2, \"ReturnArrayToSort\");\n$RefreshReg$(_c3, \"BubbleSort\");","map":{"version":3,"sources":["/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js"],"names":["React","Bar","Button","App","UpdateBarChart","arrayToSort","labels","Barchart","datasets","label","data","backgroundColor","skipLabels","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","ReturnArrayToSort","BSbutton","document","createElement","innerHTML","body","getElementsByTagName","appendChild","addEventListener","alert","BubbleSort","swappedOnCurrentIter","placeholder","firstit","i"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAAQC,cAAR,QAA6B,QAA7B;;AAEA,IAAIC,WAAJ;AACA,IAAIC,MAAJ;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACnB,sBACI;AAAA,2BACI,QAAC,GAAD;AACA,MAAA,IAAI,EAAI;AACJD,QAAAA,MAAM,EAAEA,MADJ;AAEJE,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAC,mCADV;AAEIC,UAAAA,IAAI,EAAE,EAFV;AAGIC,UAAAA,eAAe,EAAE;AAHrB,SADM;AAFN,OADR;AAYA,MAAA,MAAM,EAAE,GAZR;AAaA,MAAA,KAAK,EAAG,GAbR;AAcA,MAAA,OAAO,EAAE;AACLC,QAAAA,UAAU,EAAG,IADR;AAELC,QAAAA,mBAAmB,EAAG,KAFjB;AAGLC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CACH;AACAC,YAAAA,KAAK,EAAE;AACHC,cAAAA,WAAW,EAAG;AADX;AADP,WADG;AADH;AAHH;AAdT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAjCD;;KAAMV,Q;;AAmCN,MAAMW,iBAAiB,GAAG,MAAK;AAC3B,SAAOb,WAAP;AACH,CAFD;;MAAMa,iB;AAGN,eAAeX,QAAf;AAEA,IAAIY,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAf;AACAF,QAAQ,CAACG,SAAT,GAAqB,YAArB,C,CAEA;;AACA,IAAIC,IAAI,GAAGH,QAAQ,CAACI,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAX;AACAD,IAAI,CAACE,WAAL,CAAiBN,QAAjB,E,CAEA;;AACAA,QAAQ,CAACO,gBAAT,CAA2B,OAA3B,EAAoC,YAAW;AAC7CC,EAAAA,KAAK,CAAC,qBAAD,CAAL;AACAC,EAAAA,UAAU,CAACvB,WAAD,CAAV;AACD,CAHD;;AAMA,SAASuB,UAAT,CAAoBvB,WAApB,EAAgC;AAC5B;AAEA,MAAIwB,oBAAoB,GAAG,KAA3B;AACA,MAAIC,WAAJ;AAEA,MAAIC,OAAO,GAAG,KAAd;;AAEC,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,GAAhB,EAAqBA,CAAC,EAAtB,EAAyB;AACrB,QAAG3B,WAAW,CAAC2B,CAAC,GAAC,CAAH,CAAX,GAAiB3B,WAAW,CAAC2B,CAAD,CAA/B,EAAmC;AAChCF,MAAAA,WAAW,GAAGzB,WAAW,CAAC2B,CAAC,GAAC,CAAH,CAAzB;AACA3B,MAAAA,WAAW,CAAC2B,CAAC,GAAC,CAAH,CAAX,GAAmB3B,WAAW,CAAC2B,CAAD,CAA9B;AACA3B,MAAAA,WAAW,CAAC2B,CAAD,CAAX,GAAiBF,WAAjB;AACAD,MAAAA,oBAAoB,GAAG,IAAvB;AACF;AACL;;AACD,MAAGA,oBAAoB,IAAI,IAA3B,EAAgC;AAC5BzB,IAAAA,cAAc,CAACC,WAAD,CAAd;AACAuB,IAAAA,UAAU,CAACvB,WAAD,CAAV;AACH,GAHD,MAII;AACA,WAAOA,WAAP;AACH;AACJ;;MAvBQuB,U","sourcesContent":["\nimport React from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport Button from './Button'\nimport App from '../App';\nimport {UpdateBarChart} from '../App'\n\nvar arrayToSort;\nvar labels\nconst Barchart = () => {\n    return(\n        <div>\n            <Bar\n            data = {{\n                labels: labels, \n                datasets: [\n                    {\n                        label:'A randomly generated number entry',\n                        data: [],\n                        backgroundColor: 'purple'\n                    },\n                ],\n            }}\n            \n            height={400}\n            width ={600}\n            options={{\n                skipLabels : true,\n                maintainAspectRatio : false,\n                scales: {\n                    yAxes: [\n                        {\n                        ticks: {\n                            beginAtZero : true,\n                        }, \n                    }    \n                ],\n            },\n        }}\n        />\n        </div>\n    )\n}\n\nconst ReturnArrayToSort = () =>{\n    return arrayToSort;\n}\nexport default Barchart\n\nvar BSbutton = document.createElement(\"BSbutton\");\nBSbutton.innerHTML = \"BubbleSort\";\n\n// 2. Append somewhere\nvar body = document.getElementsByTagName(\"body\")[0];\nbody.appendChild(BSbutton);\n\n// 3. Add event handler\nBSbutton.addEventListener (\"click\", function() {\n  alert(\"Running Bubble Sort\");\n  BubbleSort(arrayToSort);\n});\n\n\nfunction BubbleSort(arrayToSort){\n    //var length = arrayToSort.length;\n\n    var swappedOnCurrentIter = false;\n    var placeholder;\n\n    var firstit = false;\n\n     for (let i=1; i<500; i++){\n         if(arrayToSort[i-1]>arrayToSort[i]){\n            placeholder = arrayToSort[i-1];\n            arrayToSort[i-1] = arrayToSort[i];\n            arrayToSort[i] = placeholder;\n            swappedOnCurrentIter = true; \n         }\n    }\n    if(swappedOnCurrentIter == true){\n        UpdateBarChart(arrayToSort);\n        BubbleSort(arrayToSort);\n    }\n    else{\n        return arrayToSort;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}