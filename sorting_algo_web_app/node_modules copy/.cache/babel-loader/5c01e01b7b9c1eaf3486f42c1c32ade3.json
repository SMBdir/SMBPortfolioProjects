{"ast":null,"code":"var _jsxFileName = \"/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Barchart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: ['red', 'green'],\n        datasets: [{\n          data: [\"1\", \"2\"],\n          backgroundColor: purple\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}; //const InitializeRandomDataset = () => {\n//    arrayToSort = [];\n//   for(let i=0; i<500; i++){\n//        nextNum = Math.floor(Math.random() * 500);\n//        arrayToSort[i] = nextNum;\n//    }\n//  };\n\n\n_c = Barchart;\nexport default Barchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"sources":["/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js"],"names":["React","Bar","Barchart","labels","datasets","data","backgroundColor","purple","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,sBACI;AAAA,2BACI,QAAC,GAAD;AACA,MAAA,IAAI,EAAI;AACJC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAO,OAAP,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAK,GAAL,CADV;AAEIC,UAAAA,eAAe,EAAEC;AAFrB,SADM;AAFN,OADR;AAUA,MAAA,MAAM,EAAE,GAVR;AAWA,MAAA,KAAK,EAAG,GAXR;AAYA,MAAA,OAAO,EAAE;AAACC,QAAAA,mBAAmB,EAAG;AAAvB;AAZT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApBD,C,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA5BMN,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport {Bar} from 'react-chartjs-2'\n\nconst Barchart = () => {\n    return(\n        <div>\n            <Bar\n            data = {{\n                labels: ['red','green'], \n                datasets: [\n                    {\n                        data: [\"1\",\"2\"],\n                        backgroundColor: purple\n                    }\n                ],\n            }}\n            height={400}\n            width ={600}\n            options={{maintainAspectRatio : false}}\n            \n            />\n        </div>\n    )\n}\n\n//const InitializeRandomDataset = () => {\n//    arrayToSort = [];\n//   for(let i=0; i<500; i++){\n//        nextNum = Math.floor(Math.random() * 500);\n//        arrayToSort[i] = nextNum;\n//    }\n//  };\n\nexport default Barchart"]},"metadata":{},"sourceType":"module"}