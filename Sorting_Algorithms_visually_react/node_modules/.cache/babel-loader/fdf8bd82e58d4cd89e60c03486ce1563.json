{"ast":null,"code":"var _jsxFileName = \"/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js\";\nimport * as React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeData = newDataState => {\n      this.setState({\n        chartData: newDataState\n      }); // console.count(\n      //     'The change Data has been ran:  ' \n      //   )\n\n      this.reference.update(); //console.log(\"CHART State Data: \"+ this.state.chartData.labels);\n    };\n\n    this.chartReference = /*#__PURE__*/React.createRef();\n    this.state = {\n      chartData: props.chartData\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        ref: reference => this.reference = reference,\n        data: this.state.chartData,\n        width: 600,\n        height: 400,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 9\n}, this), document.getElementById('root'));\nexport default Chart; // const Barchart = (ref, data, labels) => {\n//     //Try to take Data out of the Bar constructor   \n//     return(\n//         <div>\n//             <Bar\n//             data = {{\n//                 labels: labels, \n//                 datasets: [\n//                     {\n//                         label:'A randomly generated number entry',\n//                         data: data,\n//                         backgroundColor: 'purple'\n//                     },\n//                 ],\n//             }}\n//             height={400}\n//             width ={600}\n//             options={{\n//                 skipLabels : true,\n//                 maintainAspectRatio : false,\n//                 scales: {\n//                     yAxes: [\n//                         {\n//                         ticks: {\n//                             beginAtZero : true,\n//                         }, \n//                     }    \n//                 ],\n//             },\n//         }}\n//         />\n//         </div>\n//     )\n// }\n// const ReturnArrayToSort = () =>{\n//     return arrayToSort;\n// }\n// export default Barchart\n// var BSbutton = document.createElement(\"BSbutton\");\n// BSbutton.innerHTML = \"BubbleSort\";\n// // 2. Append somewhere\n// var body = document.getElementsByTagName(\"body\")[0];\n// body.appendChild(BSbutton);\n// // 3. Add event handler\n// BSbutton.addEventListener (\"click\", function() {\n//   alert(\"Running Bubble Sort\");\n//   BubbleSort(arrayToSort);\n// });","map":{"version":3,"sources":["/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js"],"names":["React","ReactDOM","Bar","Chart","Component","constructor","props","changeData","newDataState","setState","chartData","reference","update","chartReference","createRef","state","bind","render","maintainAspectRatio","document","getElementById"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAAQC,GAAR,QAAkB,iBAAlB;;;AAIA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,UARkB,GAQJC,YAAD,IAAiB;AAC1B,WAAKC,QAAL,CAAc;AACVC,QAAAA,SAAS,EAAEF;AADD,OAAd,EAD0B,CAI1B;AACA;AACA;;AACA,WAAKG,SAAL,CAAeC,MAAf,GAP0B,CAQ1B;AACH,KAjBiB;;AAEd,SAAKC,cAAL,gBAAsBb,KAAK,CAACc,SAAN,EAAtB;AACA,SAAKC,KAAL,GAAa;AACTL,MAAAA,SAAS,EAAEJ,KAAK,CAACI;AADR,KAAb;AAGA,SAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBS,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAYDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,GAAG,EAAKN,SAAD,IAAe,KAAKA,SAAL,GAAiBA,SAD3C;AAEI,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWL,SAFrB;AAGI,QAAA,KAAK,EAAE,GAHX;AAII,QAAA,MAAM,EAAE,GAJZ;AAKI,QAAA,OAAO,EAAE;AAAEQ,UAAAA,mBAAmB,EAAE;AAAvB;AALb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAhC8B;;AAkC/BjB,QAAQ,CAACgB,MAAT,eACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ;AAKJ,eAAejB,KAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import * as React from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport {Bar} from 'react-chartjs-2'\n\n\n\nclass Chart extends React.Component{\n    constructor(props){\n        super(props);\n        this.chartReference = React.createRef();\n        this.state = {\n            chartData: props.chartData\n        }\n        this.changeData = this.changeData.bind(this) \n    }\n    changeData = (newDataState) =>{\n        this.setState({\n            chartData: newDataState\n        });\n        // console.count(\n        //     'The change Data has been ran:  ' \n        //   )\n        this.reference.update();\n        //console.log(\"CHART State Data: \"+ this.state.chartData.labels);\n    }\n\n    render(){\n        return(\n            <div className=\"chart\">\n                <Bar\n                    ref = {(reference) => this.reference = reference}\n                    data={this.state.chartData}\n                    width={600}\n                    height={400}\n                    options={{ maintainAspectRatio: false }}\n                />\n            </div>\n        )\n    }\n}\n    ReactDOM.render(\n        <Chart />,\n        document.getElementById('root')\n    );\n\nexport default Chart;\n\n\n// const Barchart = (ref, data, labels) => {\n//     //Try to take Data out of the Bar constructor   \n//     return(\n//         <div>\n//             <Bar\n//             data = {{\n//                 labels: labels, \n//                 datasets: [\n//                     {\n//                         label:'A randomly generated number entry',\n//                         data: data,\n//                         backgroundColor: 'purple'\n//                     },\n//                 ],\n//             }}\n//             height={400}\n//             width ={600}\n//             options={{\n//                 skipLabels : true,\n//                 maintainAspectRatio : false,\n//                 scales: {\n//                     yAxes: [\n//                         {\n//                         ticks: {\n//                             beginAtZero : true,\n//                         }, \n//                     }    \n//                 ],\n//             },\n//         }}\n//         />\n//         </div>\n//     )\n// }\n\n// const ReturnArrayToSort = () =>{\n//     return arrayToSort;\n// }\n// export default Barchart\n\n// var BSbutton = document.createElement(\"BSbutton\");\n// BSbutton.innerHTML = \"BubbleSort\";\n\n// // 2. Append somewhere\n// var body = document.getElementsByTagName(\"body\")[0];\n// body.appendChild(BSbutton);\n\n// // 3. Add event handler\n// BSbutton.addEventListener (\"click\", function() {\n//   alert(\"Running Bubble Sort\");\n//   BubbleSort(arrayToSort);\n// });"]},"metadata":{},"sourceType":"module"}