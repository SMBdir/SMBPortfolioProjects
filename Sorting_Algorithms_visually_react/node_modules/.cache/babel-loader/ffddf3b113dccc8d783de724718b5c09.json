{"ast":null,"code":"var _jsxFileName = \"/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Button from './Button';\nimport App from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chart extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: \"chart components!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Chart; // const Barchart = (ref, data, labels) => {\n//     //Try to take Data out of the Bar constructor   \n//     return(\n//         <div>\n//             <Bar\n//             data = {{\n//                 labels: labels, \n//                 datasets: [\n//                     {\n//                         label:'A randomly generated number entry',\n//                         data: data,\n//                         backgroundColor: 'purple'\n//                     },\n//                 ],\n//             }}\n//             height={400}\n//             width ={600}\n//             options={{\n//                 skipLabels : true,\n//                 maintainAspectRatio : false,\n//                 scales: {\n//                     yAxes: [\n//                         {\n//                         ticks: {\n//                             beginAtZero : true,\n//                         }, \n//                     }    \n//                 ],\n//             },\n//         }}\n//         />\n//         </div>\n//     )\n// }\n// const ReturnArrayToSort = () =>{\n//     return arrayToSort;\n// }\n// export default Barchart\n// var BSbutton = document.createElement(\"BSbutton\");\n// BSbutton.innerHTML = \"BubbleSort\";\n// // 2. Append somewhere\n// var body = document.getElementsByTagName(\"body\")[0];\n// body.appendChild(BSbutton);\n// // 3. Add event handler\n// BSbutton.addEventListener (\"click\", function() {\n//   alert(\"Running Bubble Sort\");\n//   BubbleSort(arrayToSort);\n// });\n// function BubbleSort(arrayToSort){\n//     //var length = arrayToSort.length;\n//     var swappedOnCurrentIter = false;\n//     var placeholder;\n//      for (let i=1; i<500; i++){\n//          if(arrayToSort[i-1]>arrayToSort[i]){\n//             placeholder = arrayToSort[i-1];\n//             arrayToSort[i-1] = arrayToSort[i];\n//             arrayToSort[i] = placeholder;\n//             swappedOnCurrentIter = true; \n//          }\n//     }\n//     if(swappedOnCurrentIter == true){\n//         UpdateBarChart(arrayToSort);\n//         BubbleSort(arrayToSort);\n//     }\n//     else{\n//         return arrayToSort;\n//     }\n// }","map":{"version":3,"sources":["/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js"],"names":["React","Component","Bar","Button","App","Chart","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;;AAGA,MAAMC,KAAN,SAAoBJ,SAApB,CAA6B;AACzBK,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAPwB;;AAS7B,eAAeD,KAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport React from 'react'\nimport { Component } from 'react';\nimport {Bar} from 'react-chartjs-2'\nimport Button from './Button'\nimport App from '../App';\n\n\nclass Chart extends Component{\n    render(){\n        return(\n            <div className=\"chart\">\n                chart components!\n            </div>\n        )\n    }\n}\nexport default Chart;\n\n\n// const Barchart = (ref, data, labels) => {\n//     //Try to take Data out of the Bar constructor   \n//     return(\n//         <div>\n//             <Bar\n//             data = {{\n//                 labels: labels, \n//                 datasets: [\n//                     {\n//                         label:'A randomly generated number entry',\n//                         data: data,\n//                         backgroundColor: 'purple'\n//                     },\n//                 ],\n//             }}\n//             height={400}\n//             width ={600}\n//             options={{\n//                 skipLabels : true,\n//                 maintainAspectRatio : false,\n//                 scales: {\n//                     yAxes: [\n//                         {\n//                         ticks: {\n//                             beginAtZero : true,\n//                         }, \n//                     }    \n//                 ],\n//             },\n//         }}\n//         />\n//         </div>\n//     )\n// }\n\n// const ReturnArrayToSort = () =>{\n//     return arrayToSort;\n// }\n// export default Barchart\n\n// var BSbutton = document.createElement(\"BSbutton\");\n// BSbutton.innerHTML = \"BubbleSort\";\n\n// // 2. Append somewhere\n// var body = document.getElementsByTagName(\"body\")[0];\n// body.appendChild(BSbutton);\n\n// // 3. Add event handler\n// BSbutton.addEventListener (\"click\", function() {\n//   alert(\"Running Bubble Sort\");\n//   BubbleSort(arrayToSort);\n// });\n\n\n// function BubbleSort(arrayToSort){\n//     //var length = arrayToSort.length;\n\n//     var swappedOnCurrentIter = false;\n//     var placeholder;\n\n//      for (let i=1; i<500; i++){\n//          if(arrayToSort[i-1]>arrayToSort[i]){\n//             placeholder = arrayToSort[i-1];\n//             arrayToSort[i-1] = arrayToSort[i];\n//             arrayToSort[i] = placeholder;\n//             swappedOnCurrentIter = true; \n//          }\n//     }\n//     if(swappedOnCurrentIter == true){\n//         UpdateBarChart(arrayToSort);\n//         BubbleSort(arrayToSort);\n//     }\n//     else{\n//         return arrayToSort;\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}