{"ast":null,"code":"import _classCallCheck from\"/Users/sambannister/Documents/Projects/react-sorting-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sambannister/Documents/Projects/react-sorting-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/sambannister/Documents/Projects/react-sorting-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sambannister/Documents/Projects/react-sorting-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{Component}from'react';import{Bar}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";var Chart=/*#__PURE__*/function(_Component){_inherits(Chart,_Component);var _super=_createSuper(Chart);function Chart(props){var _this;_classCallCheck(this,Chart);_this=_super.call(this,props);_this.changeData=function(newDataState){_this.setState({chartData:newDataState});console.count('The change Data has been ran:  ');console.log(\"THIS IS RUN, HURRAY!\");//this.chartReference.Chart.update();\n//this.Chart.update();\n};_this.chartReference=/*#__PURE__*/React.createRef();_this.state={chartData:props.chartData};return _this;}_createClass(Chart,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsx(\"div\",{className:\"chart\",children:/*#__PURE__*/_jsx(Bar,{ref:function ref(reference){return _this2.reference=reference;},data:this.state.chartData,width:600,height:400,options:{maintainAspectRatio:false}})});}}]);return Chart;}(Component);export default Chart;// const Barchart = (ref, data, labels) => {\n//     //Try to take Data out of the Bar constructor   \n//     return(\n//         <div>\n//             <Bar\n//             data = {{\n//                 labels: labels, \n//                 datasets: [\n//                     {\n//                         label:'A randomly generated number entry',\n//                         data: data,\n//                         backgroundColor: 'purple'\n//                     },\n//                 ],\n//             }}\n//             height={400}\n//             width ={600}\n//             options={{\n//                 skipLabels : true,\n//                 maintainAspectRatio : false,\n//                 scales: {\n//                     yAxes: [\n//                         {\n//                         ticks: {\n//                             beginAtZero : true,\n//                         }, \n//                     }    \n//                 ],\n//             },\n//         }}\n//         />\n//         </div>\n//     )\n// }\n// const ReturnArrayToSort = () =>{\n//     return arrayToSort;\n// }\n// export default Barchart\n// var BSbutton = document.createElement(\"BSbutton\");\n// BSbutton.innerHTML = \"BubbleSort\";\n// // 2. Append somewhere\n// var body = document.getElementsByTagName(\"body\")[0];\n// body.appendChild(BSbutton);\n// // 3. Add event handler\n// BSbutton.addEventListener (\"click\", function() {\n//   alert(\"Running Bubble Sort\");\n//   BubbleSort(arrayToSort);\n// });","map":{"version":3,"sources":["/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js"],"names":["React","Component","Bar","Chart","props","changeData","newDataState","setState","chartData","console","count","log","chartReference","createRef","state","reference","maintainAspectRatio"],"mappings":"4qBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAAQC,GAAR,KAAkB,iBAAlB,C,8CAIMC,CAAAA,K,8FACF,eAAYC,KAAZ,CAAkB,uCACd,uBAAMA,KAAN,EADc,MAOlBC,UAPkB,CAOL,SAACC,YAAD,CAAiB,CAC1B,MAAKC,QAAL,CAAc,CAACC,SAAS,CAAEF,YAAZ,CAAd,EACAG,OAAO,CAACC,KAAR,CACI,iCADJ,EAGAD,OAAO,CAACE,GAAR,CAAY,sBAAZ,EACA;AACA;AACH,CAfiB,CAEd,MAAKC,cAAL,cAAsBZ,KAAK,CAACa,SAAN,EAAtB,CACA,MAAKC,KAAL,CAAa,CACTN,SAAS,CAAEJ,KAAK,CAACI,SADR,CAAb,CAHc,aAMjB,C,wCAWD,iBAAQ,iBACJ,mBACI,YAAK,SAAS,CAAC,OAAf,uBACI,KAAC,GAAD,EACI,GAAG,CAAI,aAACO,SAAD,QAAe,CAAA,MAAI,CAACA,SAAL,CAAiBA,SAAhC,EADX,CAEI,IAAI,CAAE,KAAKD,KAAL,CAAWN,SAFrB,CAGI,KAAK,CAAE,GAHX,CAII,MAAM,CAAE,GAJZ,CAKI,OAAO,CAAE,CAAEQ,mBAAmB,CAAE,KAAvB,CALb,EADJ,EADJ,CAYH,C,mBA/Bef,S,EAiCpB,cAAeE,CAAAA,KAAf,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import * as React from \"react\";\nimport { Component } from 'react';\nimport {Bar} from 'react-chartjs-2'\n\n\n\nclass Chart extends Component{\n    constructor(props){\n        super(props);\n        this.chartReference = React.createRef();\n        this.state = {\n            chartData: props.chartData\n        }\n    }\n    changeData = (newDataState) =>{\n        this.setState({chartData: newDataState});\n        console.count(\n            'The change Data has been ran:  ' \n          )\n        console.log(\"THIS IS RUN, HURRAY!\")\n        //this.chartReference.Chart.update();\n        //this.Chart.update();\n    }\n\n    render(){\n        return(\n            <div className=\"chart\">\n                <Bar\n                    ref = {(reference) => this.reference = reference}\n                    data={this.state.chartData}\n                    width={600}\n                    height={400}\n                    options={{ maintainAspectRatio: false }}\n                />\n\n            </div>\n        )\n    }\n}\nexport default Chart;\n\n\n// const Barchart = (ref, data, labels) => {\n//     //Try to take Data out of the Bar constructor   \n//     return(\n//         <div>\n//             <Bar\n//             data = {{\n//                 labels: labels, \n//                 datasets: [\n//                     {\n//                         label:'A randomly generated number entry',\n//                         data: data,\n//                         backgroundColor: 'purple'\n//                     },\n//                 ],\n//             }}\n//             height={400}\n//             width ={600}\n//             options={{\n//                 skipLabels : true,\n//                 maintainAspectRatio : false,\n//                 scales: {\n//                     yAxes: [\n//                         {\n//                         ticks: {\n//                             beginAtZero : true,\n//                         }, \n//                     }    \n//                 ],\n//             },\n//         }}\n//         />\n//         </div>\n//     )\n// }\n\n// const ReturnArrayToSort = () =>{\n//     return arrayToSort;\n// }\n// export default Barchart\n\n// var BSbutton = document.createElement(\"BSbutton\");\n// BSbutton.innerHTML = \"BubbleSort\";\n\n// // 2. Append somewhere\n// var body = document.getElementsByTagName(\"body\")[0];\n// body.appendChild(BSbutton);\n\n// // 3. Add event handler\n// BSbutton.addEventListener (\"click\", function() {\n//   alert(\"Running Bubble Sort\");\n//   BubbleSort(arrayToSort);\n// });"]},"metadata":{},"sourceType":"module"}