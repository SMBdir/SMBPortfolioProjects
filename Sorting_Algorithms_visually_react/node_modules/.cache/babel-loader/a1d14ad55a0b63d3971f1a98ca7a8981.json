{"ast":null,"code":"var _jsxFileName = \"/Users/sambannister/Documents/Projects/react-sorting-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport Navbar from './components/NavBar';\nimport BarChart from './components/BarChart';\nimport Button from './components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var arrayToSort = CreateRandomArray();\n  const ref = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      ref: ref,\n      data: arrayToSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = App;\n\nfunction CreateRandomArray() {\n  let arrayToSort = [500];\n  let labels = [500];\n\n  for (let i = 0; i < 500; i++) {\n    let nextNum = Math.floor(Math.random() * 1000);\n    arrayToSort[i] = nextNum;\n    labels[i] = '';\n  }\n\n  labels[0] = 'Lowest';\n  labels[495] = 'Highest';\n  return arrayToSort;\n}\n\n_c2 = CreateRandomArray;\nexport const UpdateBarChart = arrayToSort => {\n  console.log('C1 DATA : ');\n  console.log(ref.data);\n  ref.data.datasets[0].data = arrayToSort;\n  ref.update();\n  return c1;\n};\n_c3 = UpdateBarChart;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CreateRandomArray\");\n$RefreshReg$(_c3, \"UpdateBarChart\");","map":{"version":3,"sources":["/Users/sambannister/Documents/Projects/react-sorting-app/src/App.js"],"names":["React","Navbar","BarChart","Button","App","arrayToSort","CreateRandomArray","ref","useRef","labels","i","nextNum","Math","floor","random","UpdateBarChart","console","log","data","datasets","update","c1"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAoB,qBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,WAAW,GAAGC,iBAAiB,EAAnC;AACA,QAAMC,GAAG,GAAGC,MAAM,EAAlB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,GAAG,EAAED,GAAf;AAAoB,MAAA,IAAI,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GATQD,G;;KAAAA,G;;AAWT,SAASE,iBAAT,GAA4B;AAC1B,MAAID,WAAW,GAAG,CAAC,GAAD,CAAlB;AACA,MAAII,MAAM,GAAG,CAAC,GAAD,CAAb;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,GAAf,EAAoBA,CAAC,EAArB,EAAwB;AACpB,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAd;AACAT,IAAAA,WAAW,CAACK,CAAD,CAAX,GAAiBC,OAAjB;AACAF,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAY,EAAZ;AACH;;AACDD,EAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,QAAZ;AACAA,EAAAA,MAAM,CAAC,GAAD,CAAN,GAAc,SAAd;AACA,SAAOJ,WAAP;AACD;;MAXQC,iB;AAiBT,OAAO,MAAMS,cAAc,GAAIV,WAAD,IAAiB;AAC7CW,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACW,IAAhB;AACAX,EAAAA,GAAG,CAACW,IAAJ,CAASC,QAAT,CAAkB,CAAlB,EAAqBD,IAArB,GAA2Bb,WAA3B;AACAE,EAAAA,GAAG,CAACa,MAAJ;AACA,SAAOC,EAAP;AACD,CANM;MAAMN,c;AAOb,eAAeX,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Navbar from './components/NavBar'\nimport BarChart from './components/BarChart';\nimport Button from  './components/Button';\n\nfunction App() {\n  var arrayToSort = CreateRandomArray();\n  const ref = useRef();\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <BarChart ref={ref} data={arrayToSort}/>\n    </div>\n  );\n}\n\nfunction CreateRandomArray(){\n  let arrayToSort = [500];\n  let labels = [500]\n  for(let i=0; i<500; i++){\n      let nextNum = Math.floor(Math.random() * 1000);\n      arrayToSort[i] = nextNum;\n      labels[i] = '';\n  }\n  labels[0] = 'Lowest';\n  labels[495] = 'Highest';\n  return arrayToSort;\n}\n\n\n\n\n\nexport const UpdateBarChart = (arrayToSort) => {\n  console.log('C1 DATA : ')\n  console.log(ref.data);\n  ref.data.datasets[0].data= arrayToSort;\n  ref.update();\n  return c1;\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}