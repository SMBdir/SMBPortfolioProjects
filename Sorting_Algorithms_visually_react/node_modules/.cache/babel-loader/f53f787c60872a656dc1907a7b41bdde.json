{"ast":null,"code":"var _jsxFileName = \"/Users/sambannister/Documents/Projects/react-sorting-app/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { Component } from 'react';\nimport Navbar from './components/NavBar';\nimport BarChart from './components/BarChart';\nimport Button from './components/Button';\nimport Chart from './components/BarChart';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component() {\n  constructor() {\n    super();\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  ResetToRandom() {\n    let arrayToSort = [500];\n    let labels = [500];\n\n    for (let i = 0; i < 500; i++) {\n      let nextNum = Math.floor(Math.random() * 1000);\n      arrayToSort[i] = nextNum;\n      labels[i] = '';\n    }\n\n    labels[0] = 'Lowest';\n    labels[495] = 'Highest';\n    return arrayToSort, labels;\n  }\n\n  getChartData() {\n    let arrayToSort,\n        labels = this.ResetToRandom();\n    this.setState({\n      chartData: {\n        labels: labels,\n        datasets: [{\n          label: \"Entries\",\n          data: arrayToSort\n        }],\n        backgroundColor: 'purple'\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        chartData: this.state.chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction CreateRandomArray() {}\n\n_c = CreateRandomArray;\nexport default App; // export const UpdateBarChart = (arrayToSort) => {\n//   console.log('DATA : ')\n//   console.log(ref.data);\n//   ref.data.datasets[0].data= arrayToSort;\n//   ref.update();\n//   return ref;\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRandomArray\");","map":{"version":3,"sources":["/Users/sambannister/Documents/Projects/react-sorting-app/src/App.js"],"names":["React","Component","Navbar","BarChart","Button","Chart","render","App","constructor","state","chartData","componentWillMount","getChartData","ResetToRandom","arrayToSort","labels","i","nextNum","Math","floor","random","setState","datasets","label","data","backgroundColor","CreateRandomArray"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAEA,MAAMC,GAAN,SAAkBN,SAAS,EAA3B,CAA8B;AAC5BO,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAG;AADD,KAAb;AAGD;;AAEDC,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,YAAL;AACD;;AAEDC,EAAAA,aAAa,GAAE;AACb,QAAIC,WAAW,GAAG,CAAC,GAAD,CAAlB;AACA,QAAIC,MAAM,GAAG,CAAC,GAAD,CAAb;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,GAAf,EAAoBA,CAAC,EAArB,EAAwB;AACtB,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAd;AACAN,MAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBC,OAAjB;AACAF,MAAAA,MAAM,CAACC,CAAD,CAAN,GAAY,EAAZ;AACD;;AACDD,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,QAAZ;AACAA,IAAAA,MAAM,CAAC,GAAD,CAAN,GAAc,SAAd;AACA,WAAOD,WAAW,EAAEC,MAApB;AACD;;AAEDH,EAAAA,YAAY,GAAE;AACZ,QAAIE,WAAJ;AAAA,QAAiBC,MAAM,GAAG,KAAKF,aAAL,EAA1B;AACA,SAAKQ,QAAL,CAAc;AACZX,MAAAA,SAAS,EAAE;AACTK,QAAAA,MAAM,EAAEA,MADC;AAETO,QAAAA,QAAQ,EAAC,CACL;AACIC,UAAAA,KAAK,EAAE,SADX;AAEIC,UAAAA,IAAI,EAAEV;AAFV,SADK,CAFA;AAQTW,QAAAA,eAAe,EAAE;AARR;AADC,KAAd;AAcD;;AACDnB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAI,KAAKG,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOC;;AAlDyB;;AAuD9B,SAASgB,iBAAT,GAA4B,CAE3B;;KAFQA,iB;AAGT,eAAenB,GAAf,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { Component } from 'react';\nimport Navbar from './components/NavBar'\nimport BarChart from './components/BarChart';\nimport Button from  './components/Button';\nimport Chart from './components/BarChart';\nimport { render } from '@testing-library/react';\n\nclass App extends Component() {\n  constructor(){\n    super();\n    this.state = {\n      chartData : {}  \n    };\n  };\n\n  componentWillMount(){\n    this.getChartData();\n  }\n\n  ResetToRandom(){\n    let arrayToSort = [500];\n    let labels = [500]\n    for(let i=0; i<500; i++){\n      let nextNum = Math.floor(Math.random() * 1000);\n      arrayToSort[i] = nextNum;\n      labels[i] = '';\n    }\n    labels[0] = 'Lowest';\n    labels[495] = 'Highest';\n    return arrayToSort, labels\n  }\n\n  getChartData(){\n    let arrayToSort, labels = this.ResetToRandom();\n    this.setState({\n      chartData: {\n        labels: labels, \n        datasets:[\n            {\n                label: \"Entries\",\n                data: arrayToSort\n            }\n        ],\n        backgroundColor: 'purple', \n    }\n    })\n\n    \n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Chart chartData = {this.state.chartData}/>\n        \n      </div>\n    );\n    }\n  }\n  \n  \n\nfunction CreateRandomArray(){\n  \n}\nexport default App;\n\n\n\n\n\n// export const UpdateBarChart = (arrayToSort) => {\n//   console.log('DATA : ')\n//   console.log(ref.data);\n//   ref.data.datasets[0].data= arrayToSort;\n//   ref.update();\n//   return ref;\n// }\n\n"]},"metadata":{},"sourceType":"module"}