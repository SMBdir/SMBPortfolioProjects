{"ast":null,"code":"var _jsxFileName = \"/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar arrayToSort;\nvar labels;\n\nconst Barchart = () => {\n  arrayToSort = [500];\n  labels = [500];\n\n  for (let i = 0; i < 500; i++) {\n    let nextNum = Math.floor(Math.random() * 1000);\n    arrayToSort[i] = nextNum;\n    labels[i] = '';\n  }\n\n  labels[0] = 'Lowest';\n  labels[495] = 'Highest';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'A randomly generated number entry',\n          data: arrayToSort,\n          backgroundColor: 'purple'\n        }]\n      },\n      height: 400,\n      width: 600,\n      ref: reference => this.reference = reference,\n      options: {\n        skipLabels: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Barchart;\n\nconst ReturnArrayToSort = () => {\n  return arrayToSort;\n};\n\n_c2 = ReturnArrayToSort;\nexport default Barchart;\nvar BSbutton = document.createElement(\"BSbutton\");\nBSbutton.innerHTML = \"BubbleSort\"; // 2. Append somewhere\n\nvar body = document.getElementsByTagName(\"body\")[0];\nbody.appendChild(BSbutton); // 3. Add event handler\n\nBSbutton.addEventListener(\"click\", function () {\n  alert(\"Running Bubble Sort\");\n  BubbleSort(arrayToSort);\n});\n\nfunction BubbleSort(arrayToSort) {\n  //var length = arrayToSort.length;\n  var swappedOnCurrentIt = false;\n  var placeholder;\n  var firstit = false;\n\n  for (let i = 0; i < 500; i++) {\n    if (arrayToSort[i - 1] > arrayToSort[i]) {\n      placeholder = arrayToSort[i - 1];\n      arrayToSort[i - 1] = arrayToSort[i];\n      arrayToSort[i] = placeholder;\n      swappedOnCurrentIt = true;\n    }\n  }\n\n  if (swappedOnCurrentIt == true) {\n    if (firstit == false) {\n      UpdateBarChart(arrayToSort);\n    }\n\n    BubbleSort(arrayToSort);\n  } else {\n    var sortedArray = arrayToSort;\n    return sortedArray;\n  }\n}\n\n_c3 = BubbleSort;\n\nfunction UpdateBarChart(arrayToSort) {\n  var chart = this.reference.chartInstance;\n  removeData(chart);\n  addData(chart, labels, arrayToSort);\n}\n\n_c4 = UpdateBarChart;\n\nfunction addData(chart, label, data) {\n  chart.data.datasets[0].forEach(dataset => {\n    dataset.data.push(data);\n  });\n  chart.update();\n}\n\nfunction removeData(chart) {\n  chart.data.labels.pop();\n  chart.data.datasets[0].forEach(dataset => {\n    dataset.data.pop();\n  });\n  chart.update();\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Barchart\");\n$RefreshReg$(_c2, \"ReturnArrayToSort\");\n$RefreshReg$(_c3, \"BubbleSort\");\n$RefreshReg$(_c4, \"UpdateBarChart\");","map":{"version":3,"sources":["/Users/sambannister/Documents/Projects/react-sorting-app/src/components/BarChart.js"],"names":["React","Bar","Button","arrayToSort","labels","Barchart","i","nextNum","Math","floor","random","datasets","label","data","backgroundColor","reference","skipLabels","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","ReturnArrayToSort","BSbutton","document","createElement","innerHTML","body","getElementsByTagName","appendChild","addEventListener","alert","BubbleSort","swappedOnCurrentIt","placeholder","firstit","UpdateBarChart","sortedArray","chart","chartInstance","removeData","addData","forEach","dataset","push","update","pop"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport Button from './Button'\n\nvar arrayToSort;\nvar labels\nconst Barchart = () => {\n    arrayToSort = [500];\n    labels = [500]\n    for(let i=0; i<500; i++){\n        let nextNum = Math.floor(Math.random() * 1000);\n        arrayToSort[i] = nextNum;\n        labels[i] = ''\n    }\n    labels[0] = 'Lowest'\n    labels[495] = 'Highest'\n    return(\n        <div>\n            <Bar\n            data = {{\n                labels: labels, \n                datasets: [\n                    {\n                        label:'A randomly generated number entry',\n                        data: arrayToSort,\n                        backgroundColor: 'purple'\n                    },\n                ],\n            }}\n            height={400}\n            width ={600}\n            ref = {(reference) => this.reference = reference}\n            options={{\n                skipLabels : true,\n                maintainAspectRatio : false,\n                scales: {\n                    yAxes: [\n                        {\n                        ticks: {\n                            beginAtZero : true,\n                        }, \n                    }    \n                ],\n            },\n        }}\n        />\n        </div>\n    )\n}\n\nconst ReturnArrayToSort = () =>{\n    return arrayToSort;\n}\nexport default Barchart\n\nvar BSbutton = document.createElement(\"BSbutton\");\nBSbutton.innerHTML = \"BubbleSort\";\n\n// 2. Append somewhere\nvar body = document.getElementsByTagName(\"body\")[0];\nbody.appendChild(BSbutton);\n\n// 3. Add event handler\nBSbutton.addEventListener (\"click\", function() {\n  alert(\"Running Bubble Sort\");\n  BubbleSort(arrayToSort);\n});\n\n\nfunction BubbleSort(arrayToSort){\n    //var length = arrayToSort.length;\n\n    var swappedOnCurrentIt = false;\n    var placeholder;\n\n    var firstit = false;\n\n     for (let i=0; i<500; i++){\n         if(arrayToSort[i-1]>arrayToSort[i]){\n            placeholder = arrayToSort[i-1];\n            arrayToSort[i-1] = arrayToSort[i];\n            arrayToSort[i] = placeholder;\n            swappedOnCurrentIt = true; \n         }\n    }\n    if(swappedOnCurrentIt == true){\n        if(firstit == false){\n            UpdateBarChart(arrayToSort);\n        }    \n        BubbleSort(arrayToSort);\n    }\n    else{\n        var sortedArray = arrayToSort;\n        return sortedArray\n    }\n}\n\nfunction UpdateBarChart(arrayToSort){\n    var chart = this.reference.chartInstance\n    removeData(chart);\n    addData(chart, labels, arrayToSort)\n}\n\nfunction addData(chart, label, data) {\n    chart.data.datasets[0].forEach((dataset) => {\n        dataset.data.push(data);\n    });\n    chart.update();\n}\n\nfunction removeData(chart) {\n    chart.data.labels.pop();\n    chart.data.datasets[0].forEach((dataset) => {\n        dataset.data.pop();\n    });\n    chart.update();\n}"]},"metadata":{},"sourceType":"module"}